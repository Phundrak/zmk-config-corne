#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

#define MACRO_TAP_MS 15

#define ALT_CODE(name, n1, n2, n3, n4)                                 \
    name: name {                                                       \
        compatible = "zmk,behavior-macro";                             \
        #binding-cells = <0>;                                          \
        bindings =                                                     \
            <&macro_press>,                                            \
            <&kp LALT>,                                                \
            <&macro_tap>,                                              \
            <&kp KP_NUMBER_##n1 &kp KP_NUMBER_##n2 &kp KP_NUMBER_##n3 &kp KP_NUMBER_##n4>, \
            <&macro_release>,                                          \
            <&kp LALT>;                                                \
                                                                       \
        label = #name;                                                 \
        tap-ms = <MACRO_TAP_MS>;                                       \
    };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        ShiftEAcuteRAlt: ShiftEAcuteRAlt {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFTEACUTERALT";
            bindings = <&mo>, <&ShiftEAcute>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DELETE>;
            key-positions = <41 40>;
            layers = <0>;
        };

        pgup {
            bindings = <&kp PAGE_UP>;
            key-positions = <28 29>;
            layers = <0>;
        };

        pgdown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <30 31>;
            layers = <0>;
        };

        ScrCpy {
            bindings = <&kp PSCRN>;
            key-positions = <12 13>;
            layers = <0>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <37 38>;
            layers = <0>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <40 39>;
            layers = <0>;
        };

        SysLayer {
            bindings = <&mo 9>;
            key-positions = <38 39>;
        };

        reset_layers {
            bindings = <&to 0>;
            key-positions = <24 35>;
        };
    };

    //

    macros {
        ALT_CODE(ShiftEAcute, 0, 2, 0, 1) // É
        ALT_CODE(ShiftCCedilla, 0, 1, 4, 6) // Ç
        ALT_CODE(GApostrophe, 0, 1, 4, 6) // ’

        ShiftAGrave: ShiftAGrave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N7) &kp LS(Q)>;
            label = "SHIFTAGRAVE";
        };

        ShiftEGrave: ShiftEGrave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N7) &kp LS(E)>;
            label = "È";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp RIGHT_BRACKET  &kp B           &lt 2 NUMBER_2  &kp P          &kp O          &kp N7       &kp LEFT_BRACKET  &kp V    &kp D               &lt 2 L         &kp J           &kp N9
&kp LS(SQT)        &hm LEFT_GUI Q  &hm LEFT_ALT U  &hm LCTRL I    &lt 1 E        &lt 4 M      &lt 4 C           &lt 1 T  &hm LEFT_CONTROL S  &hm LEFT_ALT R  &hm LEFT_GUI N  &kp SEMICOLON
&kp W              &kp N0          &kp Y           &kp X          &kp LS(COMMA)  &kp K        &GApostrophe      &kp A    &kp G               &kp H           &kp F           &kp Z
                                                   &kp BACKSPACE  &lt 8 ENTER    &lt 6 DEL    &mo 7             &kp TAB  &kp SPACE
            >;
        };

        Shift {
            bindings = <
&kp RA(N3)     &kp LS(B)       &ShiftEAcuteRAlt 3 0  &kp LS(P)               &kp LS(O)   &ShiftEGrave    &kp SLASH  &kp LS(V)  &kp LS(D)               &kp LS(L)       &kp LS(J)       &ShiftCCedilla
&kp RA(GRAVE)  &hm LGUI LS(Q)  &hm LALT LS(U)        &hm LEFT_CONTROL LS(I)  &kp LS(E)   &kp COMMA       &kp LS(C)  &kp LS(T)  &hm LEFT_CONTROL LS(S)  &hm LALT LS(R)  &hm LGUI LS(N)  &kp LS(SEMICOLON)
&kp LS(W)      &ShiftAGrave    &kp LS(Y)             &kp LS(X)               &kp PERIOD  &kp LS(K)       &kp LS(M)  &kp LS(A)  &kp LS(G)               &kp LS(H)       &kp LS(F)       &kp LS(Z)
                                                     &trans                  &trans      &trans          &trans     &trans     &trans
            >;

            label = "Shift";
        };

        AltGr {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "AltGr";
        };

        AltGrShift {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "AGrShift";
        };

        NO_HM {
            bindings = <
&trans  &trans  &kp W   &trans  &trans  &trans    &trans  &trans  &trans  &kp O   &trans    &trans
&trans  &kp A   &kp S   &kp D   &kp F   &trans    &trans  &kp J   &kp K   &kp L   &kp SEMI  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans    &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "no home";
        };

        GAME {
            bindings = <
&kp ESC    &trans  &trans  &trans     &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &trans  &trans  &trans     &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans     &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
                           &kp SPACE  &kp TAB  &to 0     &to 0   &trans  &trans
            >;

            label = "Game";
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp DEL          &kp N1      &kp N2      &kp N3      &kp N4      &kp N5        &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp MINUS
&kp PRINTSCREEN  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)    &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &kp MINUS
&kp F11          &kp F1      &kp F2      &kp F3      &kp F4      &kp F5        &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &kp F12
                                         &none       &none       &trans        &tog 4      &kp HOME    &kp END
            >;
        };

        MouseMedia {
            bindings = <
&none  &mkp MB1        &mmv MOVE_UP    &mkp MB2         &msc SCRL_UP    &kp C_VOL_DN    &kp C_VOL_UP      &none  &none  &none  &none  &none
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB3        &kp C_PREV      &kp C_NEXT        &none  &none  &none  &none  &none
&none  &msc SCRL_LEFT  &none           &msc SCRL_RIGHT  &msc SCRL_DOWN  &kp C_STOP      &kp C_PLAY_PAUSE  &none  &none  &none  &none  &none
                                       &none            &none           &none           &none             &none  &none
            >;

            label = "M&M";
        };

        NUM {
            display-name = "Numpad";
            bindings = <
&none  &none  &none  &none  &none  &kp KP_NUMLOCK    &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &none
&none  &none  &none  &none  &none  &none             &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &none
&none  &none  &none  &none  &none  &none             &kp KP_EQUAL     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER  &none
                     &none  &none  &none             &kp KP_ENTER     &kp KP_DOT       &kp KP_NUMBER_0
            >;
        };

        SYS {
            bindings = <
&bt BT_CLR  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none  &bt BT_CLR_ALL
&none       &none  &none  &none  &none  &none    &none  &bt BT_SEL 3  &bt BT_SEL 4  &none         &none  &none
&none       &none  &none  &none  &none  &none    &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none
                          &none  &none  &none    &to 0  &none         &none
            >;

            label = "System";
        };

        empty {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "empty";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
